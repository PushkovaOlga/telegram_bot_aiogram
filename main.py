from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

try:
    with open("sp_gr.txt", "r", encoding="utf-8") as file:
        all_student = [line.rstrip("\n") for line in file]
        all_student = list(filter(None, all_student))
except FileNotFoundError:
    print(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ñ–∞–π–ª 'sp_gr.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω")

try:
    with open("zadaniya.txt", "r", encoding="utf-8") as file:
        zadaniya = [line.rstrip("\n") for line in file]
        zadaniya = list(filter(None, zadaniya))
except FileNotFoundError:
    print(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ñ–∞–π–ª 'zadaniya.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω")

bot = Bot(token="your token")
dp = Dispatcher(bot)

HELP_COMMAND = """
–≠—Ç–æ—Ç –±–æ—Ç –¥–∞—Å—Ç –∫–∞–∂–¥–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É –¥–∞—Å—Ç –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞—á–µ—Ç–∞ :) 
–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ ü´†
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º ‚ù§Ô∏è
/rules - –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤—Å–µ—Ö ‚ú® 
"""


@dp.message_handler(commands=["help"])
async def help_command(message: types.Message):
    await message.reply(text=HELP_COMMAND)


@dp.message_handler(commands=["rules"])
async def rules_command(message: types.Message):
    await message.answer(
        text="–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤—Å–µ—Ö: \n–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ aiogram –∏ –≤—ã–ª–æ–∂–µ–Ω –Ω–∞ github –≤ –ø—É–±–ª–∏—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ \n"
             "–í –±–æ—Ç–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã: \n/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º \n/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ \n"
             "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫, —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π. –£–¥–∞—á–∏!")
    await message.delete()


@dp.message_handler(commands=["help"])
async def help_command(message: types.Message):
    await message.reply(text=HELP_COMMAND)


@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await message.answer(text="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é, —á—Ç–æ–±—ã –±–æ—Ç –¥–∞–ª –í–∞–º –∑–∞–¥–∞–Ω–∏–µ.")


@dp.message_handler()
async def send_zadanie(message: types.Message):
    import random

    z = random.choice(zadaniya)
    found = False
    for name in all_student:
        if name.startswith(message.text):
            found = True
            break
    if found:
        await message.answer(text=z)
    else:
        await message.answer(text="–¢–∞–∫–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ. –í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã")


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
